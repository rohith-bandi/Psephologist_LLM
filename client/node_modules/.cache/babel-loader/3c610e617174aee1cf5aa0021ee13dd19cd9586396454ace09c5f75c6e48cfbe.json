{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bandi\\\\OneDrive\\\\Documents\\\\GitHub\\\\Psephologist_LLM\\\\client\\\\src\\\\prediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport './components/Prediction.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prediction = () => {\n  _s();\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const questions = [\"Predicted seat count for BJP\", \"Seat changes compared to previous election\", \"Party likely to win most seats\", \"BJP maintaining majority\", \"Congress gaining more seats\", \"Party likely to experience decline in support\", \"Chance of coalition government forming\", \"Party with highest probability of forming government\", \"Expected overall performance of each party\", \"Predicted change in seat count for each party\"];\n  const fetchAnswer = async question => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/predict', {\n        question: question\n      });\n      const data = response.data;\n      setAnswer(data.answer);\n\n      // Assuming the response contains the seat count for each party\n      if (question === \"Predicted seat count for BJP\") {\n        const seatCounts = data.seat_counts; // Assuming this is an object with party names as keys\n        const labels = Object.keys(seatCounts);\n        const values = Object.values(seatCounts);\n        setChartData({\n          labels: labels,\n          datasets: [{\n            label: 'Seat Count',\n            data: values,\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\n            hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']\n          }]\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching prediction:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '1',\n        display: 'flex',\n        flexDirection: 'column',\n        width: '70%',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginLeft: '15%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a Prediction Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedQuestion,\n          onChange: e => setSelectedQuestion(e.target.value),\n          className: \"question-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a question...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: question,\n            children: question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchAnswer(selectedQuestion),\n          className: \"btn btn-primary\",\n          disabled: !selectedQuestion || loading,\n          children: \"Get Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 23\n        }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer\",\n          dangerouslySetInnerHTML: {\n            __html: answer\n          },\n          style: {\n            width: '70%',\n            alignItems: 'center',\n            marginLeft: '15%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 22\n        }, this), chartData && selectedQuestion === \"Predicted seat count for BJP\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '50%',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Predicted Seat Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Pie, {\n            data: chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Prediction, \"mMmIKmryODJw7bAtdudStt4n8kc=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useState","axios","Pie","Header","Footer","jsxDEV","_jsxDEV","Prediction","_s","selectedQuestion","setSelectedQuestion","answer","setAnswer","loading","setLoading","chartData","setChartData","questions","fetchAnswer","question","response","post","data","seatCounts","seat_counts","labels","Object","keys","values","datasets","label","backgroundColor","hoverBackgroundColor","error","console","style","display","flexDirection","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","flex","width","justifyContent","alignItems","marginLeft","className","value","onChange","e","target","map","index","onClick","disabled","dangerouslySetInnerHTML","__html","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/bandi/OneDrive/Documents/GitHub/Psephologist_LLM/client/src/prediction.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport './components/Prediction.css';\n\nconst Prediction = () => {\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState(null);\n\n  const questions = [\n    \"Predicted seat count for BJP\",\n    \"Seat changes compared to previous election\",\n    \"Party likely to win most seats\",\n    \"BJP maintaining majority\",\n    \"Congress gaining more seats\",\n    \"Party likely to experience decline in support\",\n    \"Chance of coalition government forming\",\n    \"Party with highest probability of forming government\",\n    \"Expected overall performance of each party\",\n    \"Predicted change in seat count for each party\",\n  ];\n\n  const fetchAnswer = async (question) => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/predict', {\n        question: question,\n      });\n      const data = response.data;\n      setAnswer(data.answer);\n\n      // Assuming the response contains the seat count for each party\n      if (question === \"Predicted seat count for BJP\") {\n        const seatCounts = data.seat_counts; // Assuming this is an object with party names as keys\n        const labels = Object.keys(seatCounts);\n        const values = Object.values(seatCounts);\n\n        setChartData({\n          labels: labels,\n          datasets: [\n            {\n              label: 'Seat Count',\n              data: values,\n              backgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56',\n                '#4BC0C0',\n                '#9966FF',\n                '#FF9F40',\n              ],\n              hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56',\n                '#4BC0C0',\n                '#9966FF',\n                '#FF9F40',\n              ],\n            },\n          ],\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching prediction:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n      <Header />\n      <div style={{ flex: '1', display: 'flex', flexDirection: 'column', width: '70%', justifyContent: 'flex-start', alignItems: 'center', marginLeft: '15%' }}>\n        <div className=\"prediction-container\">\n          <h2>Select a Prediction Question</h2>\n          <select\n            value={selectedQuestion}\n            onChange={(e) => setSelectedQuestion(e.target.value)}\n            className=\"question-dropdown\"\n          >\n            <option value=\"\">Select a question...</option>\n            {questions.map((question, index) => (\n              <option key={index} value={question}>{question}</option>\n            ))}\n          </select>\n          <button\n            onClick={() => fetchAnswer(selectedQuestion)}\n            className=\"btn btn-primary\"\n            disabled={!selectedQuestion || loading}\n          >\n            Get Prediction\n          </button>\n          {loading && <div className=\"loading\">Loading...</div>}\n          {answer && <div className=\"answer\" dangerouslySetInnerHTML={{ __html: answer }} style={{width:'70%',alignItems:'center',marginLeft:'15%'}} />}\n          {chartData && selectedQuestion === \"Predicted seat count for BJP\" && (\n            <div style={{ width: '50%', marginTop: '20px' }}>\n              <h3>Predicted Seat Count</h3>\n              <Pie data={chartData} />\n            </div>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Prediction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}