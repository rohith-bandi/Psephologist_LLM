{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bandi\\\\OneDrive\\\\Documents\\\\GitHub\\\\Psephologist_LLM\\\\client\\\\src\\\\dataanalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport data from './components/extracted_data.json';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dataanalysis = () => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedConstituency, setSelectedConstituency] = useState('');\n  const [states, setStates] = useState([]);\n  const [constituencies, setConstituencies] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (selectedYear) {\n      const yearData = data[selectedYear];\n      const stateNames = yearData.map(item => Object.keys(item)[0]);\n      setStates(stateNames);\n    } else {\n      setStates([]);\n    }\n  }, [selectedYear]);\n  useEffect(() => {\n    if (selectedYear && selectedState) {\n      const stateData = data[selectedYear].find(item => item[selectedState]);\n      if (stateData) {\n        const newConstituencies = stateData[selectedState];\n        setConstituencies(newConstituencies);\n      } else {\n        setConstituencies([]);\n      }\n    } else {\n      setConstituencies([]);\n    }\n  }, [selectedYear, selectedState]);\n  const prepareChartData = data => {\n    if (Array.isArray(data) && data.length > 0) {\n      const partyData = {};\n      data.forEach(row => {\n        const {\n          Party,\n          total_votes\n        } = row;\n        partyData[Party] = total_votes;\n      });\n      const newChartData = {\n        labels: Object.keys(partyData),\n        datasets: [{\n          label: `Party wise performance${selectedConstituency ? ` for ${selectedConstituency} constituency` : ''}${selectedState ? ` in ${selectedState.replace(/_/g, ' ')}` : ''} in ${selectedYear}`,\n          data: Object.values(partyData),\n          backgroundColor: ['red', 'yellow', 'green', 'blue', 'purple', 'orange', 'cyan', 'magenta']\n        }]\n      };\n      setChartData(newChartData);\n    } else {\n      setChartData(null);\n    }\n  };\n  const handleAnalyze = async () => {\n    let prompt = '';\n    if (selectedYear) prompt += ` for the year ${selectedYear}`;\n    if (selectedState) prompt += ` in ${selectedState.replace(/_/g, ' ')}`;\n    if (selectedConstituency) prompt += ` for ${selectedConstituency} constituency`;\n    if (prompt) {\n      setLoading(true);\n      prompt = `Give me party wise performance${prompt}`;\n      console.log('Generated Prompt:', prompt);\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/analyze', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            prompt\n          })\n        });\n        const result = await response.json();\n        setAnalysisResult(result);\n        prepareChartData(result);\n      } catch (error) {\n        console.error('Error analyzing data:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  const years = Object.keys(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginLeft: '37%'\n      },\n      children: \"Indian Election analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-primary shadow\",\n        style: {\n          margin: '4%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"select-year\",\n          children: \"Select Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"select-year\",\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-primary shadow\",\n        style: {\n          margin: '4%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"select-state\",\n          children: \"Select State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"select-state\",\n          value: selectedState,\n          onChange: e => setSelectedState(e.target.value),\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: state,\n            children: state.replace(/_/g, ' ')\n          }, state, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-primary shadow\",\n        style: {\n          margin: '4%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"select-constituency\",\n          children: \"Select Constituency:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"select-constituency\",\n          value: selectedConstituency,\n          onChange: e => setSelectedConstituency(e.target.value),\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Constituency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), constituencies.map(constituency => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: constituency,\n            children: typeof constituency === 'string' ? constituency.replace(/_/g, ' ') : String(constituency)\n          }, constituency, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnalyze,\n        className: \"btn btn-light\",\n        style: {\n          margin: '4%'\n        },\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        minHeight: '54vh',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        backgroundColor: '#ece2e2',\n        marginLeft: '10%',\n        marginRight: '10%',\n        paddingTop: '3%',\n        paddingBottom: '3%',\n        borderRadius: '20px'\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 28\n      }, this) : chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          plugins: {\n            datalabels: {\n              color: 'black',\n              formatter: (value, context) => {\n                const sum = context.dataset.data.reduce((acc, val) => acc + val, 0);\n                const percentage = (value / sum * 100).toFixed(2) + '%';\n                return percentage;\n              }\n            }\n          }\n        },\n        plugins: [ChartDataLabels],\n        style: {\n          maxWidth: '1500px',\n          maxHeight: '600px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 60\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(Dataanalysis, \"G5zQmBCJ/JBDwWByxUfltUOiqMI=\");\n_c = Dataanalysis;\nexport default Dataanalysis;\nvar _c;\n$RefreshReg$(_c, \"Dataanalysis\");","map":{"version":3,"names":["React","useEffect","useState","Header","Footer","data","Bar","ChartDataLabels","jsxDEV","_jsxDEV","Dataanalysis","_s","selectedYear","setSelectedYear","selectedState","setSelectedState","selectedConstituency","setSelectedConstituency","states","setStates","constituencies","setConstituencies","analysisResult","setAnalysisResult","chartData","setChartData","loading","setLoading","yearData","stateNames","map","item","Object","keys","stateData","find","newConstituencies","prepareChartData","Array","isArray","length","partyData","forEach","row","Party","total_votes","newChartData","labels","datasets","label","replace","values","backgroundColor","handleAnalyze","prompt","console","log","response","fetch","method","headers","body","JSON","stringify","result","json","error","years","style","display","flexDirection","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","alignItems","justifyContent","className","margin","htmlFor","id","value","onChange","e","target","year","state","constituency","String","onClick","marginRight","paddingTop","paddingBottom","borderRadius","options","plugins","datalabels","color","formatter","context","sum","dataset","reduce","acc","val","percentage","toFixed","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["C:/Users/bandi/OneDrive/Documents/GitHub/Psephologist_LLM/client/src/dataanalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport data from './components/extracted_data.json';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nconst Dataanalysis = () => {\n    const [selectedYear, setSelectedYear] = useState('');\n    const [selectedState, setSelectedState] = useState('');\n    const [selectedConstituency, setSelectedConstituency] = useState('');\n    const [states, setStates] = useState([]);\n    const [constituencies, setConstituencies] = useState([]);\n    const [analysisResult, setAnalysisResult] = useState([]);\n    const [chartData, setChartData] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (selectedYear) {\n            const yearData = data[selectedYear];\n            const stateNames = yearData.map(item => Object.keys(item)[0]);\n            setStates(stateNames);\n        } else {\n            setStates([]);\n        }\n    }, [selectedYear]);\n\n    useEffect(() => {\n        if (selectedYear && selectedState) {\n            const stateData = data[selectedYear].find(item => item[selectedState]);\n            if (stateData) {\n                const newConstituencies = stateData[selectedState];\n                setConstituencies(newConstituencies);\n            } else {\n                setConstituencies([]);\n            }\n        } else {\n            setConstituencies([]);\n        }\n    }, [selectedYear, selectedState]);\n\n    const prepareChartData = (data) => {\n        if (Array.isArray(data) && data.length > 0) {\n            const partyData = {};\n            data.forEach((row) => {\n                const { Party, total_votes } = row;\n                partyData[Party] = total_votes;\n            });\n\n            const newChartData = {\n                labels: Object.keys(partyData),\n                datasets: [\n                    {\n                        label: `Party wise performance${selectedConstituency ? ` for ${selectedConstituency} constituency` : ''}${selectedState ? ` in ${selectedState.replace(/_/g, ' ')}` : ''} in ${selectedYear}`,\n                        data: Object.values(partyData),\n                        backgroundColor: [\n                            'red',\n                            'yellow',\n                            'green',\n                            'blue',\n                            'purple',\n                            'orange',\n                            'cyan',\n                            'magenta',\n                        ],\n                    },\n                ],\n            };\n            setChartData(newChartData);\n        } else {\n            setChartData(null);\n        }\n    };\n\n    const handleAnalyze = async () => {\n        let prompt = '';\n        if (selectedYear) prompt += ` for the year ${selectedYear}`;\n        if (selectedState) prompt += ` in ${selectedState.replace(/_/g, ' ')}`;\n        if (selectedConstituency) prompt += ` for ${selectedConstituency} constituency`;\n\n        if (prompt) {\n            setLoading(true);\n            prompt = `Give me party wise performance${prompt}`;\n            console.log('Generated Prompt:', prompt);\n            try {\n                const response = await fetch('http://127.0.0.1:5000/api/analyze', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ prompt }),\n                });\n                const result = await response.json();\n                setAnalysisResult(result);\n                prepareChartData(result);\n            } catch (error) {\n                console.error('Error analyzing data:', error);\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    const years = Object.keys(data);\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n            <Header />\n            <h1 style={{ marginLeft: '37%' }}>Indian Election analysis</h1>\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"btn btn-primary shadow\" style={{ margin: '4%' }}>\n                    <label htmlFor=\"select-year\">Select Year:</label>\n                    <select id=\"select-year\" value={selectedYear} onChange={(e) => setSelectedYear(e.target.value)} className=\"form-control\">\n                        <option value=\"\">Select Year</option>\n                        {years.map((year) => (\n                            <option key={year} value={year}>\n                                {year}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div className=\"btn btn-primary shadow\" style={{ margin: '4%' }}>\n                    <label htmlFor=\"select-state\">Select State:</label>\n                    <select id=\"select-state\" value={selectedState} onChange={(e) => setSelectedState(e.target.value)} className=\"form-control\">\n                        <option value=\"\">Select State</option>\n                        {states.map((state) => (\n                            <option key={state} value={state}>\n                                {state.replace(/_/g, ' ')}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div className=\"btn btn-primary shadow\" style={{ margin: '4%' }}>\n                    <label htmlFor=\"select-constituency\">Select Constituency:</label>\n                    <select id=\"select-constituency\" value={selectedConstituency} onChange={(e) => setSelectedConstituency(e.target.value)} className=\"form-control\">\n                        <option value=\"\">Select Constituency</option>\n                        {constituencies.map((constituency) => (\n                            <option key={constituency} value={constituency}>\n                                {typeof constituency === 'string' ? constituency.replace(/_/g, ' ') : String(constituency)}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <button onClick={handleAnalyze} className=\"btn btn-light\" style={{ margin: '4%' }}>Analyze</button>\n            </div>\n            <div style={{ display: 'flex', flexDirection: 'row', minHeight: '54vh', justifyContent: 'space-around', alignItems: 'center', backgroundColor: '#ece2e2', marginLeft: '10%', marginRight: '10%', paddingTop: '3%', paddingBottom: '3%', borderRadius: '20px' }}>\n                {loading ? <p>Loading...</p> : chartData ? <Bar data={chartData} options={{\n                    plugins: {\n                        datalabels: {\n                            color: 'black',\n                            formatter: (value, context) => {\n                                const sum = context.dataset.data.reduce((acc, val) => acc + val, 0);\n                                const percentage = (value / sum * 100).toFixed(2) + '%';\n                                return percentage;\n                            }\n                        }\n                    }\n                }} plugins={[ChartDataLabels]} style={{ maxWidth: '1500px', maxHeight: '600px' }} /> : null}\n                {/* {Array.isArray(analysisResult) && analysisResult.length > 0 && (\n                    <div style={{ backgroundColor: '#383636', padding: '1%', borderRadius: '10px' }}>\n                        <h3>Analysis Result:</h3>\n                        <ul>\n                            {analysisResult.map((item, index) => (\n                                <li key={index}>\n                                    {item.Party}: {item.total_votes}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                )} */}\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default Dataanalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}