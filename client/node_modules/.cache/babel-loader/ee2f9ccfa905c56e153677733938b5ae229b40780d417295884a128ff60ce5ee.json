{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bandi\\\\OneDrive\\\\Documents\\\\GitHub\\\\Psephologist_LLM\\\\client\\\\src\\\\prediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport './components/Prediction.css';\nimport { Chart as ChartJS, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend);\nconst Prediction = () => {\n  _s();\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const questions = [\"Predicted seat count for BJP\", \"Seat changes compared to previous election\", \"Party likely to win most seats\", \"BJP maintaining majority\", \"Congress gaining more seats\", \"Party likely to experience decline in support\", \"Chance of coalition government forming\", \"Party with highest probability of forming government\", \"Expected overall performance of each party\", \"Predicted change in seat count for each party\"];\n  useEffect(() => {\n    axios.get('/predicted_seat_counts.json').then(response => {\n      const data = response.data;\n      setChartData({\n        labels: Object.keys(data),\n        datasets: [{\n          label: 'Seat Distribution',\n          data: Object.values(data),\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#FF9F40', '#FFCD56', '#4BC0C0', '#9966FF', '#FF6384'],\n          hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#FF9F40', '#FFCD56', '#4BC0C0', '#9966FF', '#FF6384']\n        }]\n      });\n    }).catch(error => console.error('Error loading chart data:', error));\n  }, []);\n  const fetchAnswer = async question => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/predict', {\n        question: question\n      });\n      setAnswer(response.data.answer);\n    } catch (error) {\n      console.error('Error fetching prediction:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Custom legend component\n  const Legend = ({\n    data\n  }) => {\n    const {\n      labels,\n      datasets\n    } = data;\n    const {\n      backgroundColor\n    } = datasets[0];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-legend\",\n      children: labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-legend-color\",\n          style: {\n            backgroundColor: backgroundColor[index]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: chartData,\n          options: {\n            plugins: {\n              legend: {\n                display: false // Hide default legend\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a Prediction Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedQuestion,\n          onChange: e => setSelectedQuestion(e.target.value),\n          className: \"question-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a question...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: question,\n            children: question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchAnswer(selectedQuestion),\n          className: \"btn btn-primary\",\n          disabled: !selectedQuestion || loading,\n          children: \"Get Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer\",\n          dangerouslySetInnerHTML: {\n            __html: answer\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Prediction, \"5sLQAZ24Ie+MUQ/ovOA2vfUmPl4=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useState","useEffect","axios","Pie","Header","Footer","Chart","ChartJS","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Prediction","_s","selectedQuestion","setSelectedQuestion","answer","setAnswer","loading","setLoading","chartData","setChartData","questions","get","then","response","data","labels","Object","keys","datasets","label","values","backgroundColor","hoverBackgroundColor","catch","error","console","fetchAnswer","question","post","className","children","map","index","style","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","minHeight","options","plugins","legend","value","onChange","e","target","onClick","disabled","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/bandi/OneDrive/Documents/GitHub/Psephologist_LLM/client/src/prediction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport './components/Prediction.css';\nimport { Chart as ChartJS, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(Title, Tooltip, Legend);\n\nconst Prediction = () => {\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState(null);\n\n  const questions = [\n    \"Predicted seat count for BJP\",\n    \"Seat changes compared to previous election\",\n    \"Party likely to win most seats\",\n    \"BJP maintaining majority\",\n    \"Congress gaining more seats\",\n    \"Party likely to experience decline in support\",\n    \"Chance of coalition government forming\",\n    \"Party with highest probability of forming government\",\n    \"Expected overall performance of each party\",\n    \"Predicted change in seat count for each party\",\n  ];\n\n  useEffect(() => {\n    axios.get('/predicted_seat_counts.json')\n      .then((response) => {\n        const data = response.data;\n        setChartData({\n          labels: Object.keys(data),\n          datasets: [{\n            label: 'Seat Distribution',\n            data: Object.values(data),\n            backgroundColor: [\n              '#FF6384',\n              '#36A2EB',\n              '#FFCE56',\n              '#FF9F40',\n              '#FFCD56',\n              '#4BC0C0',\n              '#9966FF',\n              '#FF6384'\n            ],\n            hoverBackgroundColor: [\n              '#FF6384',\n              '#36A2EB',\n              '#FFCE56',\n              '#FF9F40',\n              '#FFCD56',\n              '#4BC0C0',\n              '#9966FF',\n              '#FF6384'\n            ]\n          }]\n        });\n      })\n      .catch((error) => console.error('Error loading chart data:', error));\n  }, []);\n\n  const fetchAnswer = async (question) => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/predict', {\n        question: question,\n      });\n      setAnswer(response.data.answer);\n    } catch (error) {\n      console.error('Error fetching prediction:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Custom legend component\n  const Legend = ({ data }) => {\n    const { labels, datasets } = data;\n    const { backgroundColor } = datasets[0];\n    return (\n      <div className=\"chart-legend\">\n        {labels.map((label, index) => (\n          <div key={index} className=\"chart-legend-item\">\n            <div\n              className=\"chart-legend-color\"\n              style={{ backgroundColor: backgroundColor[index] }}\n            ></div>\n            <span>{label}</span>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n      <Header />\n      <div className=\"main-content\">\n        {chartData && (\n          <div className=\"chart-container\">\n            <Pie\n              data={chartData}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false // Hide default legend\n                  }\n                }\n              }}\n            />\n            <Legend data={chartData} />\n          </div>\n        )}\n        <div className=\"prediction-container\">\n          <h2>Select a Prediction Question</h2>\n          <select\n            value={selectedQuestion}\n            onChange={(e) => setSelectedQuestion(e.target.value)}\n            className=\"question-dropdown\"\n          >\n            <option value=\"\">Select a question...</option>\n            {questions.map((question, index) => (\n              <option key={index} value={question}>{question}</option>\n            ))}\n          </select>\n          <button\n            onClick={() => fetchAnswer(selectedQuestion)}\n            className=\"btn btn-primary\"\n            disabled={!selectedQuestion || loading}\n          >\n            Get Prediction\n          </button>\n          {loading && <div className=\"loading\">Loading...</div>}\n          {answer && <div className=\"answer\" dangerouslySetInnerHTML={{ __html: answer }} />}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Prediction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}