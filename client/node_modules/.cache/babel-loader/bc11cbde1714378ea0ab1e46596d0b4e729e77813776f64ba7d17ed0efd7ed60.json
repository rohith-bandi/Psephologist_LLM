{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bandi\\\\OneDrive\\\\Documents\\\\GitHub\\\\Psephologist_LLM\\\\client\\\\src\\\\prediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport './components/Prediction.css';\nimport { Chart as ChartJS, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend);\nconst Prediction = () => {\n  _s();\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const questionMapping = {\n    \"What is the predicted seat count for BJP?\": \"Predicted seat count for BJP\",\n    \"How many seats will change compared to the previous election?\": \"Seat changes compared to previous election\",\n    \"Which party is likely to win the most seats?\": \"Party likely to win most seats\",\n    \"Will BJP maintain a majority?\": \"BJP maintaining majority\",\n    \"Is Congress likely to gain more seats?\": \"Congress gaining more seats\",\n    \"Which party is likely to experience a decline in support?\": \"Party likely to experience decline in support\",\n    \"What are the chances of a coalition government forming?\": \"Chance of coalition government forming\",\n    \"Which party has the highest probability of forming a government?\": \"Party with highest probability of forming government\",\n    \"What is the expected overall performance of each party?\": \"Expected overall performance of each party\",\n    \"What is the predicted change in seat count for each party?\": \"Predicted change in seat count for each party\"\n  };\n  const questions = Object.keys(questionMapping);\n  useEffect(() => {\n    axios.get('/predicted_seat_counts.json').then(response => {\n      const data = response.data;\n      setChartData({\n        labels: Object.keys(data),\n        datasets: [{\n          label: 'Seat Distribution',\n          data: Object.values(data),\n          backgroundColor: ['#FF9F40', '#36A2EB', '#FFCE56', '#DC143C', '#000000', '#008000', '#0000CD', '#FF6384'],\n          hoverBackgroundColor: ['#FF9F40', '#36A2EB', '#FFCE56', '#DC143C', '#000000', '#008000', '#0000CD', '#FF6384']\n        }]\n      });\n    }).catch(error => console.error('Error loading chart data:', error));\n  }, []);\n  const fetchAnswer = async questionDisplayText => {\n    setLoading(true);\n    try {\n      const actualQuestion = questionMapping[questionDisplayText];\n      const response = await axios.post('http://127.0.0.1:5000/api/predict', {\n        question: actualQuestion\n      });\n      setAnswer(response.data.answer);\n    } catch (error) {\n      console.error('Error fetching prediction:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [chartData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-legend\",\n          children: /*#__PURE__*/_jsxDEV(Legend, {\n            data: chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: chartData,\n            options: {\n              plugins: {\n                legend: {\n                  display: false // Hide default legend\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a Prediction Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedQuestion,\n          onChange: e => setSelectedQuestion(e.target.value),\n          className: \"question-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a question...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: question,\n            children: question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchAnswer(selectedQuestion),\n          className: \"btn btn-primary\",\n          disabled: !selectedQuestion || loading,\n          children: \"Get Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 23\n        }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer\",\n          dangerouslySetInnerHTML: {\n            __html: answer\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Prediction, \"5sLQAZ24Ie+MUQ/ovOA2vfUmPl4=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useState","useEffect","axios","Pie","Header","Footer","Chart","ChartJS","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Prediction","_s","selectedQuestion","setSelectedQuestion","answer","setAnswer","loading","setLoading","chartData","setChartData","questionMapping","questions","Object","keys","get","then","response","data","labels","datasets","label","values","backgroundColor","hoverBackgroundColor","catch","error","console","fetchAnswer","questionDisplayText","actualQuestion","post","question","style","display","flexDirection","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","plugins","legend","value","onChange","e","target","map","index","onClick","disabled","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/bandi/OneDrive/Documents/GitHub/Psephologist_LLM/client/src/prediction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport './components/Prediction.css';\nimport { Chart as ChartJS, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(Title, Tooltip, Legend);\n\nconst Prediction = () => {\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState(null);\n\n  const questionMapping = {\n    \"What is the predicted seat count for BJP?\": \"Predicted seat count for BJP\",\n    \"How many seats will change compared to the previous election?\": \"Seat changes compared to previous election\",\n    \"Which party is likely to win the most seats?\": \"Party likely to win most seats\",\n    \"Will BJP maintain a majority?\": \"BJP maintaining majority\",\n    \"Is Congress likely to gain more seats?\": \"Congress gaining more seats\",\n    \"Which party is likely to experience a decline in support?\": \"Party likely to experience decline in support\",\n    \"What are the chances of a coalition government forming?\": \"Chance of coalition government forming\",\n    \"Which party has the highest probability of forming a government?\": \"Party with highest probability of forming government\",\n    \"What is the expected overall performance of each party?\": \"Expected overall performance of each party\",\n    \"What is the predicted change in seat count for each party?\": \"Predicted change in seat count for each party\"\n  };\n\n  const questions = Object.keys(questionMapping);\n\n  useEffect(() => {\n    axios.get('/predicted_seat_counts.json')\n      .then((response) => {\n        const data = response.data;\n        setChartData({\n          labels: Object.keys(data),\n          datasets: [{\n            label: 'Seat Distribution',\n            data: Object.values(data),\n            backgroundColor: [\n              '#FF9F40',\n              '#36A2EB',\n              '#FFCE56',\n              '#DC143C',\n              '#000000',\n              '#008000',\n              '#0000CD',\n              '#FF6384'\n            ],\n            hoverBackgroundColor: [\n              '#FF9F40',\n              '#36A2EB',\n              '#FFCE56',\n              '#DC143C',\n              '#000000',\n              '#008000',\n              '#0000CD',\n              '#FF6384'\n            ]\n          }]\n        });\n      })\n      .catch((error) => console.error('Error loading chart data:', error));\n  }, []);\n\n  const fetchAnswer = async (questionDisplayText) => {\n    setLoading(true);\n    try {\n      const actualQuestion = questionMapping[questionDisplayText];\n      const response = await axios.post('http://127.0.0.1:5000/api/predict', {\n        question: actualQuestion,\n      });\n      setAnswer(response.data.answer);\n    } catch (error) {\n      console.error('Error fetching prediction:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n      <Header />\n      <div className=\"main-content\">\n        {chartData && (\n          <>\n            <div className=\"chart-legend\">\n              <Legend data={chartData} />\n            </div>\n            <div className=\"chart-container\">\n              <Pie\n                data={chartData}\n                options={{\n                  plugins: {\n                    legend: {\n                      display: false // Hide default legend\n                    }\n                  }\n                }}\n              />\n            </div>\n          </>\n        )}\n        <div className=\"prediction-container\">\n          <h2>Select a Prediction Question</h2>\n          <select\n            value={selectedQuestion}\n            onChange={(e) => setSelectedQuestion(e.target.value)}\n            className=\"question-dropdown\"\n          >\n            <option value=\"\">Select a question...</option>\n            {questions.map((question, index) => (\n              <option key={index} value={question}>{question}</option>\n            ))}\n          </select>\n          <button\n            onClick={() => fetchAnswer(selectedQuestion)}\n            className=\"btn btn-primary\"\n            disabled={!selectedQuestion || loading}\n          >\n            Get Prediction\n          </button>\n          {loading && <div className=\"loading\">Loading...</div>}\n          {answer && <div className=\"answer\" dangerouslySetInnerHTML={{ __html: answer }} />}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Prediction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}